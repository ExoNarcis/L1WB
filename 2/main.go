package main

import (
	"fmt"
	"sync"
)

// Написать программу, которая конкурентно рассчитает значение квадратов чисел
// взятых из массива (2,4,6,8,10) и выведет их квадраты в stdout.
// Допушение stdout = вывод в shell/cmd (echo)
// Допушение N2 - никто не говорил синхронизировать вывод по индексу массива

func main() {
	arr := []int{2, 4, 6, 8, 10} // Массив
	wg := sync.WaitGroup{}       // WaitGroup что бы успеть вывести в stdout(echo shell) иначе горутинки могут даже не стартануть
	for _, v := range arr {      // сахарный цикл по массиву
		wg.Add(1)        // прибавляем счетчик ожиданий
		go func(v int) { //горутинка передаем v по значению что бы не было бед с ссылкой на v
			fmt.Println(fmt.Sprintf("%v^2 = %v", v, v*v)) // выводим (math.Pow религия не позволила использовать)
			wg.Done()                                     // говорим что мы успешно все сделали
		}(v)
	}
	wg.Wait() // ожидаем пока все горутинки сделают свои дела..
}
